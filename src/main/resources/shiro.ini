[main]

##############
# Realm & DB #
##############
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT password, concat(email,password_salt) FROM users WHERE email = ?
jdbcRealm.userRolesQuery = SELECT role FROM user_roles WHERE user_id = (SELECT id FROM users WHERE email = ?)
jdbcRealm.permissionsLookupEnabled = true
; jdbcRealm.authenticationQuery = SELECT password FROM users WHERE email = ?

ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.serverName = localhost
ds.user = root
ds.password = root
ds.databaseName = shiro


#################
# login classes #
#################
; passwordMatcher = org.apache.shiro.authc.credential.Sha256CredentialsMatcher
credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.storedCredentialsHexEncoded = true
credentialsMatcher.hashIterations = 5000

###############################
# Connecting classes to realm #
###############################
jdbcRealm.dataSource = $ds
jdbcRealm.credentialsMatcher = $credentialsMatcher
securityManager.realms=$jdbcRealm

###############################
#

; config.authorizers =
; config.matchers = $credentialsMatcher

; signingConfig = org.pac4j.jwt.config.signature.SecretSignatureConfiguration
; signingConfig.secret = 12345678901234567890123456789012
; encryptionConfig = org.pac4j.jwt.config.encryption.SecretEncryptionConfiguration
; encryptionConfig.secret = 12345678901234567890123456789012

; jwtAuthenticator = org.pac4j.jwt.credentials.authenticator.JwtAuthenticator
; jwtAuthenticator.signatureConfiguration = $signingConfig
; jwtAuthenticator.encryptionConfiguration = $encryptionConfig

; jwtSecurityFilter = io.buji.pac4j.filter.SecurityFilter
; jwtSecurityFilter.config = $config
; jwtSecurityFilter.clients = ParameterClient